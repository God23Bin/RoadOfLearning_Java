<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--加载配置文件-->
    <bean id="loadProperties" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:db.properties</value>
            </array>
        </property>
    </bean>

    <!--配置数据库相关-数据源（之前是在conf.xml里配置，现在交由Spring来配置）-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
        <property name="maxTotal" value="${maxTotal}"></property>
        <property name="maxIdle" value="${maxIdle}"></property>
    </bean>

    <!--配置MyBatis的核心类，SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 无需conf.xml了
        <property name="configLocation" value="conf.xml"></property>
        -->
        <!--直接加载mapper.xml-->
        <property name="mapperLocations" value="com/bin23/mapper/*.xml"></property>
    </bean>


    <bean id="userInfoService" class="com.bin23.service.impl.UserInfoServiceImpl">
        <property name="userInfoMapper" ref="userInfoMapper"></property>
    </bean>

    <!--第一种方式获取 Mapper，自己写个实现类继承 SqlSessionDaoSupport 获取sqlSession，进而获取Mapper-->
    <!--
    <bean id="userInfoMapper" class="com.bin23.dao.impl.UserInfoDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    -->

    <!--第二种方式获取 Mapper，直接使用别人写好的实现类MapperFactoryBean
    <bean id="userInfoMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        通过其mapperInterface属性，告知该实现类为某个接口的实现类
        <property name="mapperInterface" value="com.bin23.mapper.UserInfoMapper"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    -->

    <!--
        第三种方式获取 Mapper，批量生产Mappers
        产生的mapper在IOC中默认id为接口名
        而且属性名不再是sqlSessionFactory而是sqlSessionFactoryBeanName
        返回值是String，不是引用类型，所以注入是使用value
    -->
    <bean id="mappers" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--通过其mapperInterface属性，告知该实现类为某个接口的实现类-->
        <property name="basePackage" value="com.bin23.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>



</beans>